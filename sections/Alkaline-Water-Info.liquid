{% schema %}
{
  "name": "Alkaline Water Info",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Featured product"
    },
    {
      "type": "header",
      "content": "Desktop Image Settings"
    },
    {
      "type": "range",
      "id": "desktop_image_height",
      "label": "Desktop height (px)",
      "min": 300,
      "max": 800,
      "step": 10,
      "default": 500
    },
    {
      "type": "header",
      "content": "Mobile Image Settings"
    },
    {
      "type": "range",
      "id": "mobile_image_height",
      "label": "Mobile height (px)",
      "min": 200,
      "max": 600,
      "step": 10,
      "default": 350
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "label": "Enable Quick Add",
      "default": true
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "dual_image",
      "name": "Dual Image Card",
      "settings": [
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Default image"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Hover image"
        },
        {
          "type": "url",
          "id": "card_link",
          "label": "Card link"
        },
        {
          "type": "text",
          "id": "alt_text",
          "label": "Alt text",
          "info": "For SEO accessibility"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Share information about your brand with your customers.",
          "label": "Text"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "Body"
            },
            {
              "value": "subtitle",
              "label": "Subtitle"
            },
            {
              "value": "uppercase",
              "label": "Uppercase"
            }
          ],
          "default": "body",
          "label": "Text style"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Alkaline Water Info",
      "blocks": [
        {
          "type": "dual_image"
        },
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}

{%- liquid
  assign product = section.settings.product
  if product == null
    assign placeholder = true
  endif
-%}

{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-rating.css' | asset_url | stylesheet_tag }}
{{ 'quick-add.css' | asset_url | stylesheet_tag }}
<script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

<style>
  .alkaline-section {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  
  @media screen and (min-width: 750px) {
    .alkaline-section {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .alkaline-container {
    display: flex;
    flex-direction: column;
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .alkaline-grid {
    display: grid;
    gap: 3rem;
  }

  @media screen and (min-width: 990px) {
    .alkaline-grid {
      grid-template-columns: 1fr 1fr;
      align-items: center;
    }
    
    .dual-image-container {
      height: {{ section.settings.desktop_image_height }}px;
    }
  }

  .dual-image-container {
    position: relative;
    width: 100%;
    height: {{ section.settings.mobile_image_height }}px;
    overflow: hidden;
    border-radius: 8px;
  }

  .dual-image-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .dual-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity 0.5s ease, transform 0.5s ease;
  }

  .hover-image {
    opacity: 0;
  }

  .dual-image-card:hover .hover-image {
    opacity: 1;
    transform: scale(1.03);
  }

  .dual-image-card:hover .default-image {
    opacity: 0;
    transform: scale(1.05);
  }

  .product-info-container {
    padding: 2rem 0;
  }

  .product__title {
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  .price {
    margin-bottom: 1.5rem;
  }

  .product__text {
    margin-bottom: 1.5rem;
  }

  /* Quick Add Styles */
  .quick-add__submit {
    width: 100%;
  }
  
  .quick-add__submit[aria-disabled="true"] {
    pointer-events: none;
    opacity: 0.7;
  }

  @media screen and (max-width: 989px) {
    .alkaline-grid {
      grid-template-columns: 1fr;
    }
  }

  @media screen and (max-width: 749px) {
    .alkaline-container {
      padding: 0 1rem;
    }
  }
</style>

<div class="alkaline-section color-{{ section.settings.color_scheme }}">
  <div class="alkaline-container">
    <div class="alkaline-grid">
      <!-- Dual Image Card Section -->
      <div class="dual-image-card">
        {% for block in section.blocks %}
          {% if block.type == 'dual_image' and block.settings.image_1 != blank %}
            {% assign aspect_ratio = block.settings.image_1.aspect_ratio %}
            <a href="{{ block.settings.card_link | default: '#' }}" class="dual-image-link">
              <div class="dual-image-container">
                <div class="dual-image-wrapper">
                  <img src="{{ block.settings.image_1 | img_url: '1000x' }}"
                       alt="{{ block.settings.alt_text | default: 'Alkaline water' }}"
                       class="dual-image default-image"
                       loading="lazy"
                       width="1000"
                       height="{{ 1000 | divided_by: aspect_ratio | round }}">
                  
                  {% if block.settings.image_2 != blank %}
                    <img src="{{ block.settings.image_2 | img_url: '1000x' }}"
                         alt="{{ block.settings.alt_text | default: 'Alkaline water hover' }}"
                         class="dual-image hover-image"
                         loading="lazy"
                         width="1000"
                         height="{{ 1000 | divided_by: aspect_ratio | round }}">
                  {% endif %}
                </div>
              </div>
            </a>
          {% endif %}
        {% endfor %}
      </div>

      <!-- Product Info Section -->
      <div class="product-info-container">
        {%- unless placeholder -%}
          <h2 class="product__title h1">{{ product.title | escape }}</h2>
          
          <div class="price">
            {% render 'price', product: product, use_variant: true, show_badges: true %}
          </div>
          
          {% for block in section.blocks %}
            {%- case block.type -%}
              {%- when 'text' -%}
                <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">
                  {{ block.settings.text }}
                </p>
            {%- endcase -%}
          {% endfor %}
          
          {%- if section.settings.enable_quick_add -%}
            <quick-add-buttons>
              {%- assign product_form_id = 'quick-add-' | append: section.id | append: product.id -%}
              {%- form 'product', product, id: product_form_id, class: 'form' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                <button
                  id="{{ product_form_id }}-submit"
                  type="submit"
                  name="add"
                  class="quick-add__submit button button--full-width"
                  aria-haspopup="dialog"
                  aria-label="{{ 'products.product.choose_options' | t: product_name: product.title | escape }}"
                  aria-live="polite"
                  data-sold-out-message="true"
                >
                  <span>
                    {%- if product.selected_or_first_available_variant.available -%}
                      {{ 'products.product.add_to_cart' | t }}
                    {%- else -%}
                      {{ 'products.product.sold_out' | t }}
                    {%- endif -%}
                  </span>
                  <span class="sold-out-message hidden">
                    {{ 'products.product.sold_out' | t }}
                  </span>
                  <div class="loading-overlay__spinner hidden">
                    <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                      <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                    </svg>
                  </div>
                </button>
              {%- endform -%}
            </quick-add-buttons>
          {%- else -%}
            {%- form 'product', product -%}
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
              <button type="submit" class="button button--full-width">
                {{ 'products.product.add_to_cart' | t }}
              </button>
            {%- endform -%}
          {%- endif -%}
          
          <a href="{{ product.url }}" class="link product__view-details">
            {{ 'products.product.view_full_details' | t }}
          </a>
        {%- else -%}
          <h2 class="product__title h1">{{ 'onboarding.product_title' | t }}</h2>
          <div class="price">
            <span class="price-item price-item--regular">$29.99</span>
          </div>
          
          {% for block in section.blocks %}
            {%- case block.type -%}
              {%- when 'text' -%}
                <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">
                  {{ block.settings.text }}
                </p>
            {%- endcase -%}
          {% endfor %}
          
          <button type="button" class="button button--full-width">
            {{ 'products.product.add_to_cart' | t }}
          </button>
        {%- endunless -%}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    if (typeof Shopify === 'undefined') return;

    // Quick add functionality
    class QuickAddButtons extends HTMLElement {
      constructor() {
        super();
        this.querySelector('form').addEventListener('submit', this.onSubmitHandler.bind(this));
      }

      onSubmitHandler(evt) {
        evt.preventDefault();
        const submitButton = this.querySelector('[type="submit"]');
        
        if (submitButton.classList.contains('loading')) return;

        this.handleErrorMessage();
        submitButton.setAttribute('aria-disabled', true);
        submitButton.classList.add('loading');
        submitButton.querySelector('.loading-overlay__spinner').classList.remove('hidden');

        const formData = new FormData(this.querySelector('form'));
        
        fetch(`${routes.cart_add_url}`, {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(response => {
          if (response.status) {
            this.handleErrorMessage(response.description);
            return;
          }

          this.updateCart();
        })
        .catch(e => {
          console.error(e);
          this.handleErrorMessage();
        })
        .finally(() => {
          submitButton.classList.remove('loading');
          submitButton.removeAttribute('aria-disabled');
          submitButton.querySelector('.loading-overlay__spinner').classList.add('hidden');
        });
      }

      handleErrorMessage(errorMessage = false) {
        // Implement error message display if needed
      }

      updateCart() {
        fetch(`${routes.cart_url}`)
        .then(response => response.text())
        .then(cartData => {
          // Update cart count or drawer if implemented
          if (typeof updateCartCount === 'function') {
            updateCartCount();
          }
        })
        .catch(e => {
          console.error(e);
        });
      }
    }

    customElements.define('quick-add-buttons', QuickAddButtons);
  });
</script>