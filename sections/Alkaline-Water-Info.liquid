{% schema %}
{
  "name": "Alkaline Water Info",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Featured product"
    },
    {
      "type": "range",
      "id": "desktop_image_height",
      "label": "Desktop image height (px)",
      "min": 300,
      "max": 800,
      "step": 10,
      "default": 500
    },
    {
      "type": "range",
      "id": "mobile_image_height",
      "label": "Mobile image height (px)",
      "min": 200,
      "max": 600,
      "step": 10,
      "default": 350
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "dual_image",
      "name": "Dual Image Card",
      "settings": [
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Default image"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Hover image"
        },
        {
          "type": "url",
          "id": "card_link",
          "label": "Card link"
        },
        {
          "type": "text",
          "id": "alt_text",
          "label": "Alt text",
          "info": "For SEO accessibility"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.featured-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Share information about your brand with your customers.",
          "label": "t:sections.featured-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.featured-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.featured-product.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "price",
      "name": "t:sections.featured-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "t:sections.featured-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.featured-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.featured-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.featured-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.featured-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.featured-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.featured-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.featured-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.featured-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.featured-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.featured-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.featured-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.featured-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_quick_add",
          "label": "Enable quick add",
          "default": true
        }
      ]
    },
    {
      "type": "share",
      "name": "t:sections.featured-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.featured-product.blocks.share.settings.text.label",
          "default": "Share"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.featured-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.featured-product.blocks.rating.settings.paragraph.content"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Alkaline Water Info",
      "blocks": [
        {
          "type": "dual_image"
        },
        {
          "type": "title"
        },
        {
          "type": "price"
        },
        {
          "type": "variant_picker"
        },
        {
          "type": "quantity_selector"
        },
        {
          "type": "buy_buttons"
        }
      ]
    }
  ]
}
{% endschema %}

{%- liquid
  assign product = section.settings.product
  if product == null
    assign placeholder = true
  endif
-%}

{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-rating.css' | asset_url | stylesheet_tag }}
{{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
{{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}

<style>
  .alkaline-section {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  
  @media screen and (min-width: 750px) {
    .alkaline-section {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .alkaline-container {
    display: flex;
    flex-direction: column;
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .alkaline-grid {
    display: grid;
    gap: 3rem;
  }

  @media screen and (min-width: 990px) {
    .alkaline-grid {
      grid-template-columns: 1fr 1fr;
      align-items: flex-start;
    }
  }

  .dual-image-card {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: 8px;
  }

  .dual-image-container {
    position: relative;
    width: 100%;
    height: {{ section.settings.desktop_image_height }}px;
  }

  .dual-image-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .dual-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: opacity 0.5s ease, transform 0.5s ease;
  }

  .hover-image {
    opacity: 0;
  }

  .dual-image-card:hover .hover-image {
    opacity: 1;
    transform: scale(1.03);
  }

  .dual-image-card:hover .default-image {
    opacity: 0;
    transform: scale(1.05);
  }

  .product-info-container {
    padding: 0;
  }

  /* 精确匹配featured-product的间距标准 */
  .product__title {
    margin: 0 0 1.2rem;
  }

  .product__price {
    margin: 0 0 1.4rem;
  }

  .product__sku {
    margin: 0 0 1.4rem;
  }

  .product__variants {
    margin: 0 0 1.8rem;
  }

  .product__quantity {
    margin: 0 0 2.2rem;
  }

  .product__buttons {
    margin: 0 0 1.6rem;
  }

  .product__share {
    margin: 0 0 2rem;
  }

  .product__rating {
    margin: 0 0 1.6rem;
  }

  .product__text {
    margin: 0 0 1.4rem;
  }

  .product__view-details {
    display: inline-block;
    margin: 2rem 0 0;
  }

  .quick-add-button {
    margin: 0 0 1rem;
  }

  @media screen and (max-width: 989px) {
    .alkaline-grid {
      grid-template-columns: 1fr;
    }
    
    .dual-image-container {
      height: {{ section.settings.mobile_image_height }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .alkaline-container {
      padding: 0 1rem;
    }

    .product__title {
      margin: 0 0 1rem;
    }

    .product__price,
    .product__sku,
    .product__text {
      margin: 0 0 1.2rem;
    }

    .product__variants {
      margin: 0 0 1.4rem;
    }

    .product__quantity {
      margin: 0 0 1.8rem;
    }

    .product__buttons {
      margin: 0 0 1.4rem;
    }

    .product__share {
      margin: 0 0 1.6rem;
    }

    .product__rating {
      margin: 0 0 1.2rem;
    }
  }
</style>

<div class="alkaline-section color-{{ section.settings.color_scheme }}">
  <div class="alkaline-container">
    <div class="alkaline-grid">
      <!-- Dual Image Card Section -->
      <div class="dual-image-card">
        {% for block in section.blocks %}
          {% if block.type == 'dual_image' and block.settings.image_1 != blank %}
            {% assign aspect_ratio = block.settings.image_1.aspect_ratio %}
            <a href="{{ block.settings.card_link | default: '#' }}" class="dual-image-link">
              <div class="dual-image-container">
                <div class="dual-image-wrapper">
                  <img src="{{ block.settings.image_1 | img_url: '1000x' }}"
                       alt="{{ block.settings.alt_text | default: 'Alkaline water' }}"
                       class="dual-image default-image"
                       loading="lazy"
                       width="1000"
                       height="{{ 1000 | divided_by: aspect_ratio | round }}">
                  
                  {% if block.settings.image_2 != blank %}
                    <img src="{{ block.settings.image_2 | img_url: '1000x' }}"
                         alt="{{ block.settings.alt_text | default: 'Alkaline water hover' }}"
                         class="dual-image hover-image"
                         loading="lazy"
                         width="1000"
                         height="{{ 1000 | divided_by: aspect_ratio | round }}">
                  {% endif %}
                </div>
              </div>
            </a>
          {% endif %}
        {% endfor %}
      </div>

      <!-- Product Info Section -->
      <div class="product-info-container">
        {%- assign product_form_id = 'product-form-' | append: section.id -%}
        
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'title' -%}
              <h2 class="product__title {{ block.settings.heading_size }}" {{ block.shopify_attributes }}>
                {%- unless placeholder -%}
                  {{ product.title | escape }}
                {%- else -%}
                  {{ 'onboarding.product_title' | t }}
                {%- endunless -%}
              </h2>
            
            {%- when 'price' -%}
              <div class="product__price" {{ block.shopify_attributes }}>
                {%- render 'price', product: product, use_variant: true, show_badges: true -%}
              </div>
            
            {%- when 'sku' -%}
              <p class="product__sku{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" {{ block.shopify_attributes }}>
                <span class="visually-hidden">{{ 'products.product.sku' | t }}:</span>
                {{- product.selected_or_first_available_variant.sku -}}
              </p>
            
            {%- when 'text' -%}
              <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" {{ block.shopify_attributes }}>
                {{- block.settings.text -}}
              </p>
            
            {%- when 'rating' -%}
              {%- if product.metafields.reviews.rating.value != blank -%}
                <div class="product__rating" {{ block.shopify_attributes }}>
                  {% liquid
                    assign rating_decimal = 0
                    assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                    if decimal >= 0.3 and decimal <= 0.7
                      assign rating_decimal = 0.5
                    elsif decimal > 0.7
                      assign rating_decimal = 1
                    endif
                  %}
                  <div class="rating" role="img">
                    <span class="rating-star" style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: 5; --rating-decimal: {{ rating_decimal }};"></span>
                  </div>
                  <p class="rating-text">
                    {{ product.metafields.reviews.rating.value | round: 1 }} / 5
                  </p>
                  <p class="rating-count">
                    ({{ product.metafields.reviews.rating_count }})
                  </p>
                </div>
              {%- endif -%}
            
            {%- when 'variant_picker' -%}
              {%- unless product.has_only_default_variant -%}
                <div class="product__variants" {{ block.shopify_attributes }}>
                  {%- render 'product-variant-picker',
                    product: product,
                    block: block,
                    product_form_id: product_form_id
                  -%}
                </div>
              {%- endunless -%}
            
            {%- when 'quantity_selector' -%}
              <div class="product__quantity" {{ block.shopify_attributes }}>
                <label class="quantity__label form__label" for="Quantity-{{ section.id }}">
                  {{ 'products.product.quantity.label' | t }}
                </label>
                <quantity-input class="quantity">
                  <button class="quantity__button" name="minus" type="button">
                    <span class="visually-hidden">
                      {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                    </span>
                    {% render 'icon-minus' %}
                  </button>
                  <input class="quantity__input"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    min="1"
                    value="1"
                    form="{{ product_form_id }}">
                  <button class="quantity__button" name="plus" type="button">
                    <span class="visually-hidden">
                      {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                    </span>
                    {% render 'icon-plus' %}
                  </button>
                </quantity-input>
              </div>
            
            {%- when 'buy_buttons' -%}
              <div class="product__buttons" {{ block.shopify_attributes }}>
                {%- if block.settings.show_quick_add -%}
                  <div class="quick-add-button">
                    <button type="button"
                      class="button button--full-width"
                      data-quick-add
                      data-variant-id="{{ product.selected_or_first_available_variant.id }}">
                      {{ 'products.product.quick_add' | t }}
                    </button>
                  </div>
                {%- endif -%}
                
                {%- form 'product', product, id: product_form_id -%}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  <div class="product-form__buttons">
                    <button
                      type="submit"
                      name="add"
                      class="product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}"
                      {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                    >
                      {%- if product.selected_or_first_available_variant.available -%}
                        {{ 'products.product.add_to_cart' | t }}
                      {%- else -%}
                        {{ 'products.product.sold_out' | t }}
                      {%- endif -%}
                    </button>
                    {%- if block.settings.show_dynamic_checkout -%}
                      {{ form | payment_button }}
                    {%- endif -%}
                  </div>
                {%- endform -%}
              </div>
            
            {%- when 'share' -%}
              <div class="product__share" {{ block.shopify_attributes }}>
                {% assign share_url = product.url | prepend: request.origin %}
                {% render 'share-button',
                  block: block,
                  share_link: share_url,
                  share_label: block.settings.share_label
                %}
              </div>
          {%- endcase -%}
        {%- endfor -%}
        
        <a
          {% if product == blank %}
            role="link" aria-disabled="true"
          {% else %}
            href="{{ product.url }}"
          {% endif %}
          class="link product__view-details animate-arrow"
        >
          {{ 'products.product.view_full_details' | t }}
          {% render 'icon-arrow' %}
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Quick add functionality
    document.querySelectorAll('[data-quick-add]').forEach(button => {
      button.addEventListener('click', async function() {
        const variantId = this.dataset.variantId;
        const formData = {
          'items': [{
            'id': variantId,
            'quantity': 1
          }]
        };
        
        try {
          const response = await fetch(window.Shopify.routes.root + 'cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
          });
          
          const result = await response.json();
          
          // Update cart count
          fetch(window.Shopify.routes.root + 'cart.js')
            .then(response => response.json())
            .then(cart => {
              document.querySelectorAll('.cart-count-bubble').forEach(el => {
                el.textContent = cart.item_count;
                el.classList.remove('hidden');
              });
            });
          
          // Show success message
          const message = document.createElement('div');
          message.className = 'quick-add-message';
          message.textContent = '{{ "products.product.added_to_cart" | t }}';
          this.parentNode.appendChild(message);
          
          setTimeout(() => {
            message.remove();
          }, 3000);
          
        } catch (error) {
          console.error('Error:', error);
        }
      });
    });
  });
</script>

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
