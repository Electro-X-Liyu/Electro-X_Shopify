{{ 'banner.css' | asset_url | stylesheet_tag }}

{%- if section.settings.image_height == 'adapt' and section.settings.image != blank -%}
  {%- style -%}
    @media screen and (max-width: 749px) {
      #Banner-{{ section.id }}::before,
      #Banner-{{ section.id }} .banner__media::before,
      #Banner-{{ section.id }}:not(.banner--mobile-bottom) .banner__content::before {
        padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;
        content: '';
        display: block;
      }
    }

    @media screen and (min-width: 750px) {
      #Banner-{{ section.id }}::before,
      #Banner-{{ section.id }} .banner__media::before {
        padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;
        content: '';
        display: block;
      }
    }
  {%- endstyle -%}
{%- endif -%}

{%- style -%}
  #Banner-{{ section.id }}::after {
    opacity: {{ section.settings.image_overlay_opacity | divided_by: 100.0 }};
  }
  
  /* 画中画样式 */
  .banner__pip-wrapper {
    position: absolute;
    z-index: 2;
    width: {{ section.settings.pip_width }}%;
    {% if section.settings.pip_position == 'custom' %}
      top: {{ section.settings.pip_position_vertical }}%;
      left: {{ section.settings.pip_position_horizontal }}%;
      transform: translate(-{{ section.settings.pip_position_horizontal }}%, -{{ section.settings.pip_position_vertical }}%);
    {% elsif section.settings.pip_position == 'top-left' %}
      top: 5%;
      left: 5%;
    {% elsif section.settings.pip_position == 'top-right' %}
      top: 5%;
      right: 5%;
    {% elsif section.settings.pip_position == 'bottom-left' %}
      bottom: 5%;
      left: 5%;
    {% elsif section.settings.pip_position == 'bottom-right' %}
      bottom: 5%;
      right: 5%;
    {% elsif section.settings.pip_position == 'center' %}
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    {% endif %}
  }
  
  .banner__pip {
    position: relative;
    width: 100%;
    padding-bottom: {{ 1 | divided_by: section.settings.pip_image.aspect_ratio | times: 100 }}%;
    border: {{ section.settings.pip_border_width }}px solid {{ section.settings.pip_border_color }};
    border-radius: {{ section.settings.pip_border_radius }}px;
    box-shadow: {{ section.settings.pip_box_shadow }};
    overflow: hidden;
    background-color: {{ section.settings.pip_background }};
  }
  
  .banner__pip-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  @media screen and (max-width: 749px) {
    .banner__pip-wrapper {
      width: {{ section.settings.pip_width_mobile }}% !important;
    }
    
    {% if section.settings.show_text_below %}
      .banner__content {
        position: relative;
        z-index: 1;
        margin-top: calc({{ section.settings.pip_width_mobile }}% * {{ 1 | divided_by: section.settings.pip_image.aspect_ratio | times: 100 | divided_by: 100 }} + 20px);
      }
      .banner__pip-wrapper {
        position: relative;
        margin: 0 auto;
        top: auto !important;
        left: auto !important;
        right: auto !important;
        bottom: auto !important;
        transform: none !important;
      }
    {% endif %}
  }
{%- endstyle -%}

{%- liquid
  assign full_width = '100vw'
  assign widths = '375, 550, 750, 1100, 1500, 1780, 2000, 3000, 3840'

  if section.settings.image_behavior == 'ambient'
    assign half_width = '60vw'
    assign full_width = '120vw'
    assign stacked_sizes = '(min-width: 750px) 60vw, 120vw'
    assign widths = '450, 660, 900, 1320, 1800, 2136, 2400, 3600, 7680'
  elsif section.settings.image_behavior == 'fixed' or section.settings.image_behavior == 'zoom-in'
    assign half_width = '100vw'
    assign stacked_sizes = '100vw'
  else
    assign half_width = '50vw'
    assign stacked_sizes = '(min-width: 750px) 50vw, 100vw'
  endif
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
-%}

<div
  id="Banner-{{ section.id }}"
  class="banner banner--content-align-{{ section.settings.desktop_content_alignment }} banner--content-align-mobile-{{ section.settings.mobile_content_alignment }} banner--{{ section.settings.image_height }}{% if section.settings.stack_images_on_mobile and section.settings.image != blank and section.settings.image_2 != blank %} banner--stacked{% endif %}{% if section.settings.image_height == 'adapt' and section.settings.image != blank %} banner--adapt{% endif %}{% if section.settings.show_text_below %} banner--mobile-below-pip{%- endif -%}{% if section.settings.show_text_box == false %} banner--desktop-transparent{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
>
  {%- if section.settings.image != blank -%}
    <div class="banner__media media{% if section.settings.image == blank and section.settings.image_2 == blank %} placeholder{% endif %}{% if section.settings.image_2 != blank %} banner__media-half{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {%- liquid
        assign image_height = section.settings.image.width | divided_by: section.settings.image.aspect_ratio
        if section.settings.image_2 != blank
          assign image_class = 'banner__media-image-half'
        endif
        if section.settings.image_2 != blank and section.settings.stack_images_on_mobile
          assign sizes = stacked_sizes
        elsif section.settings.image_2 != blank
          assign sizes = half_width
        else
          assign sizes = full_width
        endif
      -%}
      {{
        section.settings.image
        | image_url: width: 3840
        | image_tag:
          width: section.settings.image.width,
          height: image_height,
          class: image_class,
          sizes: sizes,
          widths: widths,
          fetchpriority: fetch_priority
      }}
    </div>
  {%- elsif section.settings.image_2 == blank -%}
    <div class="banner__media media{% if section.settings.image == blank and section.settings.image_2 == blank %} placeholder{% endif %}{% if section.settings.image_2 != blank %} banner__media-half{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
    </div>
  {%- endif -%}
  {%- if section.settings.image_2 != blank -%}
    <div class="banner__media media{% if section.settings.image != blank %} banner__media-half{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {%- liquid
        assign image_height_2 = section.settings.image_2.width | divided_by: section.settings.image_2.aspect_ratio
        if section.settings.image != blank
          assign image_class_2 = 'banner__media-image-half'
        endif
        if section.settings.image != blank and section.settings.stack_images_on_mobile
          assign sizes = stacked_sizes
        elsif section.settings.image_2 != blank
          assign sizes = half_width
        else
          assign sizes = full_width
        endif
      -%}
      {{
        section.settings.image_2
        | image_url: width: 3840
        | image_tag:
          width: section.settings.image_2.width,
          height: image_height_2,
          class: image_class_2,
          sizes: sizes,
          widths: widths,
          fetchpriority: fetch_priority
      }}
    </div>
  {%- endif -%}
  
  {%- if section.settings.pip_enable and section.settings.pip_image != blank -%}
    <div class="banner__pip-wrapper">
      <div class="banner__pip">
        {{
          section.settings.pip_image
          | image_url: width: 800
          | image_tag: class: 'banner__pip-image'
        }}
      </div>
    </div>
  {%- endif -%}
  
  <div class="banner__content banner__content--{{ section.settings.desktop_content_position }}{% unless section.settings.show_text_below %} page-width{% endunless %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <div class="banner__box content-container{% unless section.settings.show_text_below %} content-container--full-width-mobile{% endunless %} color-{{ section.settings.color_scheme }} gradient">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'heading' -%}
            <h2
              class="banner__heading inline-richtext {{ block.settings.heading_size }}"
              {{ block.shopify_attributes }}
            >
              {{ block.settings.heading }}
            </h2>
          {%- when 'text' -%}
            <div class="banner__text rte {{ block.settings.text_style }}" {{ block.shopify_attributes }}>
              <p>{{ block.settings.text }}</p>
            </div>
          {%- when 'buttons' -%}
            <div
              class="banner__buttons{% if block.settings.button_label_1 != blank and block.settings.button_label_2 != blank %} banner__buttons--multiple{% endif %}"
              {{ block.shopify_attributes }}
            >
              {%- if block.settings.button_label_1 != blank -%}
                <a
                  {% if block.settings.button_link_1 == blank %}
                    role="link" aria-disabled="true"
                  {% else %}
                    href="{{ block.settings.button_link_1 }}"
                  {% endif %}
                  class="button{% if block.settings.button_style_secondary_1 %} button--secondary{% else %} button--primary{% endif %}"
                >
                  {{- block.settings.button_label_1 | escape -}}
                </a>
              {%- endif -%}
              {%- if block.settings.button_label_2 != blank -%}
                <a
                  {% if block.settings.button_link_2 == blank %}
                    role="link" aria-disabled="true"
                  {% else %}
                    href="{{ block.settings.button_link_2 }}"
                  {% endif %}
                  class="button{% if block.settings.button_style_secondary_2 %} button--secondary{% else %} button--primary{% endif %}"
                >
                  {{- block.settings.button_label_2 | escape -}}
                </a>
              {%- endif -%}
            </div>
        {%- endcase -%}
      {%- endfor -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Banner with PIP",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "主横幅图片"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "第二横幅图片(可选)"
    },
    {
      "type": "range",
      "id": "image_overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "图片叠加层透明度",
      "default": 0
    },
    {
      "type": "select",
      "id": "image_height",
      "options": [
        {
          "value": "adapt",
          "label": "适应图片比例"
        },
        {
          "value": "small",
          "label": "小"
        },
        {
          "value": "medium",
          "label": "中"
        },
        {
          "value": "large",
          "label": "大"
        }
      ],
      "default": "medium",
      "label": "图片高度"
    },
    {
      "type": "select",
      "id": "image_behavior",
      "options": [
        {
          "value": "none",
          "label": "无效果"
        },
        {
          "value": "ambient",
          "label": "环境效果"
        },
        {
          "value": "fixed",
          "label": "固定效果"
        },
        {
          "value": "zoom-in",
          "label": "缩放效果"
        }
      ],
      "default": "none",
      "label": "图片动画效果"
    },
    {
      "type": "header",
      "content": "画中画设置"
    },
    {
      "type": "checkbox",
      "id": "pip_enable",
      "label": "启用画中画",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "pip_image",
      "label": "画中画图片"
    },
    {
      "type": "range",
      "id": "pip_width",
      "min": 10,
      "max": 50,
      "step": 1,
      "unit": "%",
      "label": "画中画宽度(桌面端)",
      "default": 20,
      "info": "相对于横幅宽度的百分比"
    },
    {
      "type": "range",
      "id": "pip_width_mobile",
      "min": 10,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "画中画宽度(移动端)",
      "default": 30,
      "info": "相对于横幅宽度的百分比"
    },
    {
      "type": "select",
      "id": "pip_position",
      "options": [
        {
          "value": "top-left",
          "label": "左上角"
        },
        {
          "value": "top-right",
          "label": "右上角"
        },
        {
          "value": "bottom-left",
          "label": "左下角"
        },
        {
          "value": "bottom-right",
          "label": "右下角"
        },
        {
          "value": "center",
          "label": "居中"
        },
        {
          "value": "custom",
          "label": "自定义位置"
        }
      ],
      "default": "bottom-right",
      "label": "画中画位置"
    },
    {
      "type": "range",
      "id": "pip_position_horizontal",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "水平位置",
      "default": 20,
      "info": "仅当选择'自定义位置'时生效"
    },
    {
      "type": "range",
      "id": "pip_position_vertical",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "垂直位置",
      "default": 20,
      "info": "仅当选择'自定义位置'时生效"
    },
    {
      "type": "range",
      "id": "pip_border_width",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "边框宽度",
      "default": 2
    },
    {
      "type": "color",
      "id": "pip_border_color",
      "label": "边框颜色",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "pip_border_radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "边框圆角",
      "default": 8
    },
    {
      "type": "color",
      "id": "pip_background",
      "label": "背景颜色",
      "default": "transparent"
    },
    {
      "type": "text",
      "id": "pip_box_shadow",
      "label": "阴影效果",
      "default": "0 4px 8px rgba(0,0,0,0.2)",
      "info": "使用CSS box-shadow语法"
    },
    {
      "type": "header",
      "content": "内容设置"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "top-left",
          "label": "左上"
        },
        {
          "value": "top-center",
          "label": "顶部居中"
        },
        {
          "value": "top-right",
          "label": "右上"
        },
        {
          "value": "middle-left",
          "label": "中间左侧"
        },
        {
          "value": "middle-center",
          "label": "正中间"
        },
        {
          "value": "middle-right",
          "label": "中间右侧"
        },
        {
          "value": "bottom-left",
          "label": "左下"
        },
        {
          "value": "bottom-center",
          "label": "底部居中"
        },
        {
          "value": "bottom-right",
          "label": "右下"
        }
      ],
      "default": "middle-center",
      "label": "内容位置(桌面端)"
    },
    {
      "type": "select",
      "id": "desktop_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "左对齐"
        },
        {
          "value": "center",
          "label": "居中"
        },
        {
          "value": "right",
          "label": "右对齐"
        }
      ],
      "default": "center",
      "label": "内容对齐方式(桌面端)"
    },
    {
      "type": "checkbox",
      "id": "show_text_box",
      "default": true,
      "label": "显示文本框"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "色彩方案",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "移动端设置"
    },
    {
      "type": "checkbox",
      "id": "stack_images_on_mobile",
      "default": true,
      "label": "在移动端堆叠图片"
    },
    {
      "type": "select",
      "id": "mobile_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "左对齐"
        },
        {
          "value": "center",
          "label": "居中"
        },
        {
          "value": "right",
          "label": "右对齐"
        }
      ],
      "default": "center",
      "label": "内容对齐方式(移动端)"
    },
    {
      "type": "checkbox",
      "id": "show_text_below",
      "default": true,
      "label": "在移动端将内容显示在画中画下方",
      "info": "启用后内容将显示在画中画下方并取消容器限制"
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "标题",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "图片横幅标题",
          "label": "标题内容"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "小"
            },
            {
              "value": "h1",
              "label": "中"
            },
            {
              "value": "h0",
              "label": "大"
            },
            {
              "value": "hxl",
              "label": "超大"
            },
            {
              "value": "hxxl",
              "label": "特大"
            }
          ],
          "default": "h1",
          "label": "标题大小"
        }
      ]
    },
    {
      "type": "text",
      "name": "文本",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "用横幅图片和文字内容讲述您的品牌故事",
          "label": "文本内容"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "正文"
            },
            {
              "value": "subtitle",
              "label": "副标题"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "说明文字"
            }
          ],
          "default": "body",
          "label": "文本样式"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "按钮",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label_1",
          "default": "按钮标签1",
          "label": "第一个按钮标签",
          "info": "留空则隐藏按钮"
        },
        {
          "type": "url",
          "id": "button_link_1",
          "label": "第一个按钮链接"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_1",
          "default": false,
          "label": "第一个按钮使用次要样式"
        },
        {
          "type": "text",
          "id": "button_label_2",
          "default": "按钮标签2",
          "label": "第二个按钮标签",
          "info": "留空则隐藏按钮"
        },
        {
          "type": "url",
          "id": "button_link_2",
          "label": "第二个按钮链接"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_2",
          "default": false,
          "label": "第二个按钮使用次要样式"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "带画中画的横幅",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "buttons"
        }
      ]
    }
  ]
}
{% endschema %}