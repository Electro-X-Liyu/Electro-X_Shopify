{% schema %}
{
  "name": "优化图片画廊",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "标题",
      "default": "图片展示"
    },
    {
      "type": "range",
      "id": "row_height",
      "label": "桌面端图片高度(px)",
      "min": 200,
      "max": 600,
      "step": 10,
      "default": 400
    }
  ],
  "blocks": [
    {
      "type": "image_block",
      "name": "图片块",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "图片"
        },
        {
          "type": "url",
          "id": "link",
          "label": "链接"
        },
        {
          "type": "text",
          "id": "alt_text",
          "label": "替代文本",
          "info": "图片描述(SEO优化用)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "优化图片画廊",
      "category": "图片展示",
      "blocks": [
        {"type": "image_block"},
        {"type": "image_block"},
        {"type": "image_block"},
        {"type": "image_block"},
        {"type": "image_block"}
      ]
    }
  ]
}
{% endschema %}

<div class="enhanced-image-gallery" data-section-id="{{ section.id }}">
  {% if section.settings.title != blank %}
    <h2 class="section-title">{{ section.settings.title }}</h2>
  {% endif %}
  
  <div class="gallery-container">
    <!-- 桌面端布局 -->
    <div class="gallery-track desktop-gallery">
      {% for block in section.blocks %}
        {% if block.settings.image != blank %}
          {% assign aspect_ratio = block.settings.image.aspect_ratio %}
          <div class="image-container" style="width: calc({{ aspect_ratio }} * {{ section.settings.row_height }}px); margin-right: 33px;" {{ block.shopify_attributes }}>
            <a href="{{ block.settings.link | default: '#' }}" class="image-link">
              <img src="{{ block.settings.image | img_url: '1000x' }}"
                   alt="{{ block.settings.alt_text | default: 'Image' }}"
                   class="grid-image"
                   loading="lazy"
                   width="1000"
                   height="{{ 1000 | divided_by: aspect_ratio | round }}"
                   style="height: {{ section.settings.row_height }}px;">
              <div class="image-hover-effect"></div>
            </a>
          </div>
        {% endif %}
      {% endfor %}
    </div>
    
    <!-- 移动端布局 -->
    <div class="mobile-gallery-wrapper">
      <div class="gallery-track mobile-gallery">
        {% for block in section.blocks %}
          {% if block.settings.image != blank %}
            {% assign aspect_ratio = block.settings.image.aspect_ratio %}
            <div class="mobile-slide" style="scroll-snap-align: start; flex: 0 0 calc(80% - 20px); margin-right: 20px;">
              <div class="image-container" style="height: 290px;">
                <a href="{{ block.settings.link | default: '#' }}" class="image-link">
                  <img src="{{ block.settings.image | img_url: '800x' }}"
                       alt="{{ block.settings.alt_text | default: 'Image' }}"
                       class="mobile-image"
                       loading="lazy"
                       style="height: 100%; width: auto; max-width: none; object-fit: contain;">
                </a>
              </div>
            </div>
          {% endif %}
        {% endfor %}
        <!-- 循环滑动需要的副本 -->
        {% for block in section.blocks %}
          {% if block.settings.image != blank %}
            {% assign aspect_ratio = block.settings.image.aspect_ratio %}
            <div class="mobile-slide" style="scroll-snap-align: start; flex: 0 0 calc(80% - 20px); margin-right: 20px;">
              <div class="image-container" style="height: 290px;">
                <a href="{{ block.settings.link | default: '#' }}" class="image-link">
                  <img src="{{ block.settings.image | img_url: '800x' }}"
                       alt="{{ block.settings.alt_text | default: 'Image' }}"
                       class="mobile-image"
                       loading="lazy"
                       style="height: 100%; width: auto; max-width: none; object-fit: contain;">
                </a>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<style>
.enhanced-image-gallery {
  max-width: calc(100% - 40px);
  margin: 0 auto;
  padding: 0 20px;
  position: relative;
}

.section-title {
  text-align: center;
  margin-bottom: 30px;
  font-size: 28px;
  color: #333;
  position: relative;
  padding-bottom: 15px;
}

.section-title:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 2px;
  background-color: #333;
}

.gallery-container {
  position: relative;
}

/* 桌面端样式 */
.gallery-track {
  display: flex;
  align-items: center;
}

.desktop-gallery {
  flex-wrap: wrap;
  justify-content: center;
  gap: 33px;
  margin: 0 -16.5px;
}

.image-container {
  position: relative;
  flex-shrink: 0;
  transition: transform 0.3s ease;
  border-radius: 4px;
  display: flex;
  justify-content: center;
  align-items: center;
  background: transparent;
  overflow: visible;
}

.image-link {
  display: block;
  position: relative;
  height: 100%;
  width: 100%;
}

.grid-image {
  width: auto;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  object-position: center;
  display: block;
  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), 
              z-index 0.3s ease;
  position: relative;
  z-index: 1;
  will-change: transform;
}

.image-container:hover .grid-image {
  transform: scale(1.15);
  z-index: 10;
}

.image-hover-effect {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.03);
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* 移动端样式 */
.mobile-gallery-wrapper {
  position: relative;
  display: none;
  width: 100%;
}

.mobile-gallery {
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  padding-bottom: 10px;
  scroll-behavior: smooth;
}

.mobile-gallery::-webkit-scrollbar {
  display: none;
}

.mobile-slide {
  flex-shrink: 0;
}

.mobile-slide .image-container {
  height: 290px !important;
  margin: 0 10px;
}

.mobile-image {
  width: auto;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* 响应式切换 */
@media (max-width: 768px) {
  .desktop-gallery {
    display: none;
  }
  
  .mobile-gallery-wrapper {
    display: block;
  }
  
  .section-title {
    font-size: 24px;
    margin-bottom: 20px;
  }
}

@media (max-width: 480px) {
  .enhanced-image-gallery {
    max-width: calc(100% - 20px);
    padding: 0 10px;
  }
  
  .section-title {
    font-size: 20px;
  }
  
  .mobile-slide {
    flex: 0 0 calc(85% - 15px);
    margin-right: 15px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const mobileGallery = document.querySelector('.mobile-gallery');
  
  if (mobileGallery) {
    // 无限循环滑动逻辑
    let isDragging = false;
    let startPos = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;
    let animationID;
    
    // 克隆第一个和最后一个元素用于循环
    const slides = mobileGallery.querySelectorAll('.mobile-slide');
    if (slides.length > 0) {
      const firstSlide = slides[0].cloneNode(true);
      const lastSlide = slides[slides.length - 1].cloneNode(true);
      mobileGallery.insertBefore(lastSlide, slides[0]);
      mobileGallery.appendChild(firstSlide);
    }
    
    // 初始化位置
    mobileGallery.style.transform = `translateX(-${slides[0].offsetWidth}px)`;
    
    // 触摸事件处理
    mobileGallery.addEventListener('touchstart', touchStart);
    mobileGallery.addEventListener('touchend', touchEnd);
    mobileGallery.addEventListener('touchmove', touchMove);
    
    // 鼠标事件处理
    mobileGallery.addEventListener('mousedown', touchStart);
    mobileGallery.addEventListener('mouseup', touchEnd);
    mobileGallery.addEventListener('mouseleave', touchEnd);
    mobileGallery.addEventListener('mousemove', touchMove);
    
    function touchStart(e) {
      isDragging = true;
      startPos = e.type === 'touchstart' ? e.touches[0].clientX : e.clientX;
      animationID = requestAnimationFrame(animation);
      mobileGallery.style.scrollBehavior = 'auto';
    }
    
    function touchEnd() {
      isDragging = false;
      cancelAnimationFrame(animationID);
      
      const movedBy = currentTranslate - prevTranslate;
      const slideWidth = mobileGallery.querySelector('.mobile-slide').offsetWidth;
      
      if (movedBy < -50) {
        currentTranslate += slideWidth;
      } else if (movedBy > 50) {
        currentTranslate -= slideWidth;
      }
      
      setPositionByIndex();
    }
    
    function touchMove(e) {
      if (isDragging) {
        const currentPosition = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;
        currentTranslate = prevTranslate + currentPosition - startPos;
      }
    }
    
    function animation() {
      setGalleryPosition();
      if (isDragging) requestAnimationFrame(animation);
    }
    
    function setGalleryPosition() {
      mobileGallery.style.transform = `translateX(${currentTranslate}px)`;
    }
    
    function setPositionByIndex() {
      const slideWidth = mobileGallery.querySelector('.mobile-slide').offsetWidth;
      currentTranslate = -slideWidth;
      prevTranslate = currentTranslate;
      setGalleryPosition();
    }
  }
});
</script>