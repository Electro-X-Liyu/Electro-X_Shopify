{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  /* 桌面端标题样式 */
  #shopify-section-{{ section.id }} .multicolumn__title .title {
    color: {{ section.settings.title_color_desktop }};
    font-size: {{ section.settings.title_size_desktop }}px;
    margin-top: {{ section.settings.title_margin_top_desktop }}px;
    margin-bottom: {{ section.settings.title_margin_bottom_desktop }}px;
  }

  /* 桌面端区块标题样式 */
  #shopify-section-{{ section.id }} .multicolumn-card__info h3 {
    color: {{ section.settings.block_title_color_desktop }};
    font-size: {{ section.settings.block_title_size_desktop }}px;
    margin-top: {{ section.settings.block_title_margin_top_desktop }}px;
    margin-bottom: {{ section.settings.block_title_margin_bottom_desktop }}px;
  }

  /* 桌面端文本样式 */
  #shopify-section-{{ section.id }} .multicolumn-card__info .rte {
    color: {{ section.settings.block_text_color_desktop }};
    font-size: {{ section.settings.block_text_size_desktop }}px;
    margin-top: {{ section.settings.block_text_margin_top_desktop }}px;
    margin-bottom: {{ section.settings.block_text_margin_bottom_desktop }}px;
  }

  /* 桌面端链接样式 */
  #shopify-section-{{ section.id }} .multicolumn-card__info .link {
    color: {{ section.settings.block_link_color_desktop }};
    font-size: {{ section.settings.block_link_size_desktop }}px;
    margin-top: {{ section.settings.block_link_margin_top_desktop }}px;
    margin-bottom: {{ section.settings.block_link_margin_bottom_desktop }}px;
  }

  /* 优化移动端滑动体验 */
  @media screen and (max-width: 749px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top_mobile }}px;
      padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
    }

    /* 移动端标题样式 */
    #shopify-section-{{ section.id }} .multicolumn__title .title {
      color: {{ section.settings.title_color_mobile }};
      font-size: {{ section.settings.title_size_mobile }}px;
      margin-top: {{ section.settings.title_margin_top_mobile }}px;
      margin-bottom: {{ section.settings.title_margin_bottom_mobile }}px;
    }

    /* 移动端区块标题样式 */
    #shopify-section-{{ section.id }} .multicolumn-card__info h3 {
      color: {{ section.settings.block_title_color_mobile }};
      font-size: {{ section.settings.block_title_size_mobile }}px;
      margin-top: {{ section.settings.block_title_margin_top_mobile }}px;
      margin-bottom: {{ section.settings.block_title_margin_bottom_mobile }}px;
    }

    /* 移动端文本样式 */
    #shopify-section-{{ section.id }} .multicolumn-card__info .rte {
      color: {{ section.settings.block_text_color_mobile }};
      font-size: {{ section.settings.block_text_size_mobile }}px;
      margin-top: {{ section.settings.block_text_margin_top_mobile }}px;
      margin-bottom: {{ section.settings.block_text_margin_bottom_mobile }}px;
    }

    /* 移动端链接样式 */
    #shopify-section-{{ section.id }} .multicolumn-card__info .link {
      color: {{ section.settings.block_link_color_mobile }};
      font-size: {{ section.settings.block_link_size_mobile }}px;
      margin-top: {{ section.settings.block_link_margin_top_mobile }}px;
      margin-bottom: {{ section.settings.block_link_margin_bottom_mobile }}px;
    }

    .multicolumn-list {
      display: flex;
      flex-wrap: nowrap;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      padding-bottom: 10px;
      overscroll-behavior-x: contain;
      scroll-behavior: smooth;
      scroll-padding: 0 10px;
      will-change: transform;
      touch-action: pan-y;
    }
    .multicolumn-list::-webkit-scrollbar {
      display: none;
    }
    .multicolumn-list__item {
      min-width: calc({{ section.settings.mobile_column_width }}% - {{ section.settings.mobile_column_gap | divided_by: 2 }}px);
      scroll-snap-align: start;
      flex: 0 0 {{ section.settings.mobile_column_width }}%;
      padding: 0 {{ section.settings.mobile_column_gap | divided_by: 2 }}px;
      transform: translateZ(0);
      backface-visibility: hidden;
      -webkit-backface-visibility: hidden;
    }
    
    .slider-mobile-gutter .slider-buttons {
      display: none !important;
    }

    #shopify-section-{{ section.id }} .button--primary {
      font-size: {{ section.settings.mobile_button_text_size }}px;
      padding: {{ section.settings.mobile_button_padding_top }}px {{ section.settings.mobile_button_padding_right }}px {{ section.settings.mobile_button_padding_bottom }}px {{ section.settings.mobile_button_padding_left }}px;
    }
  }

  /* 桌面端样式 */
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    
    .multicolumn-list[data-desktop-slider] {
      display: flex;
      flex-wrap: nowrap;
      overflow-x: auto;
      scroll-behavior: smooth;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
      cursor: grab;
      scrollbar-width: none;
    }
    .multicolumn-list[data-desktop-slider]::-webkit-scrollbar {
      display: none;
    }
    .multicolumn-list[data-desktop-slider]:active {
      cursor: grabbing;
    }
    
    .multicolumn-list__item {
      min-width: calc(33.33% - 20px);
      flex-shrink: 0;
      scroll-snap-align: start;
    }
    
    .slider-buttons.desktop-only {
      display: flex;
      justify-content: space-between;
      position: absolute;
      width: calc(100% + 100px);
      left: -50px;
      top: 50%;
      transform: translateY(-50%);
      pointer-events: none;
    }
    .slider-button--prev.desktop-prev,
    .slider-button--next.desktop-next {
      pointer-events: auto;
      width: 40px;
      height: 40px;
    }
    .slider-button--prev.desktop-prev .icon-wrap,
    .slider-button--next.desktop-next .icon-wrap {
      width: 40px;
      height: 40px;
    }
  }

  /* 按钮样式 */
  #shopify-section-{{ section.id }} .button--primary {
    background-color: {{ section.settings.button_bg_color }};
    color: {{ section.settings.button_text_color }};
    border-radius: {{ section.settings.button_border_radius }}px;
    padding: {{ section.settings.button_padding_top }}px {{ section.settings.button_padding_right }}px {{ section.settings.button_padding_bottom }}px {{ section.settings.button_padding_left }}px;
    margin-top: {{ section.settings.button_margin_top }}px;
    margin-bottom: {{ section.settings.button_margin_bottom }}px;
    font-size: {{ section.settings.button_text_size }}px;
    display: inline-block;
    text-align: center;
  }

  /* 图片链接样式 */
  .multicolumn-card__image-wrapper {
    position: relative;
  }
  .multicolumn-card__image-link {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
  }

  /* 懒加载图片样式 */
  .multicolumn-card__image.lazyload,
  .multicolumn-card__image.lazyloading {
    opacity: 0.1;
    transition: opacity 0.3s ease;
    background: #f8f8f8;
  }
  .multicolumn-card__image.lazyloaded {
    opacity: 1;
    background: transparent;
  }
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="multicolumn color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div
    class="page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin multicolumn__title">
        <h2 class="title inline-richtext {{ section.settings.heading_size }}">
          {{ section.settings.title }}
        </h2>
      </div>
    {%- endunless -%}

    <div class="slider-mobile-gutter">
      {%- if section.blocks.size > 3 -%}
        <div class="slider-buttons desktop-only">
          <button
            type="button"
            class="slider-button slider-button--prev desktop-prev"
            name="previous"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
          >
            <span class="svg-wrapper">{{ 'icon-caret.svg' | inline_asset_content }}</span>
          </button>
          <button
            type="button"
            class="slider-button slider-button--next desktop-next"
            name="next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
          >
            <span class="svg-wrapper">{{ 'icon-caret.svg' | inline_asset_content }}</span>
          </button>
        </div>
      {%- endif -%}

      <ul
        class="multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down{% if section.blocks.size > 3 %} desktop-slider{% endif %}"
        id="Slider-{{ section.id }}"
        role="list"
        {% if section.blocks.size > 3 %}
          data-desktop-slider
        {% endif %}
      >
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}

        {%- for block in section.blocks -%}
          {%- assign empty_column = '' -%}
          {%- if block.settings.image == blank
            and block.settings.title == blank
            and block.settings.text == blank
            and block.settings.link_label == blank
          -%}
            {%- assign empty_column = ' multicolumn-list__item--empty' -%}
          {%- endif -%}

          <li
            id="Slide-{{ section.id }}-{{ forloop.index }}"
            class="multicolumn-list__item grid__item{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
              style="--animation-order: {{ forloop.index }};"
            {% endif %}
          >
            <div class="multicolumn-card content-container">
              {%- if block.settings.image != blank -%}
                {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}
                <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                  <div
                    class="media media--transparent media--{{ section.settings.image_ratio }}"
                    {% if section.settings.image_ratio == 'adapt' %}
                      style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;"
                    {% endif %}
                  >
                    {%- liquid
                      assign number_of_columns = 3
                      assign number_of_columns_mobile = section.settings.columns_mobile
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      if section.settings.image_width == 'half'
                        assign image_width = 0.5
                      elsif section.settings.image_width == 'third'
                        assign image_width = 0.33
                      else
                        assign image_width = 1
                      endif
                    -%}

                    {% capture sizes %}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                      calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}

                    {% comment %} 优化的图片懒加载实现 {% endcomment %}
                    {%- assign lazy_load = false -%}
                    {%- if forloop.index > 2 -%}
                      {%- assign lazy_load = true -%}
                    {%- endif -%}
                    
                    {{
                      block.settings.image
                      | image_url: width: 3200
                      | image_tag:
                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                        sizes: sizes,
                        class: 'multicolumn-card__image',
                        loading: 'lazy',
                        decoding: 'async'
                    }}

                    {%- if block.settings.image_link != blank -%}
                      <a
                        href="{{ block.settings.image_link }}"
                        class="multicolumn-card__image-link"
                        aria-label="{% if block.settings.title != blank %}{{ block.settings.title | escape }}{% else %}Learn more{% endif %}"
                      ></a>
                    {%- endif -%}
                  </div>
                </div>
              {%- endif -%}

              <div class="multicolumn-card__info">
                {%- if block.settings.title != blank -%}
                  <h3 class="inline-richtext">{{ block.settings.title }}</h3>
                {%- endif -%}
                {%- if block.settings.text != blank -%}
                  <div class="rte">{{ block.settings.text }}</div>
                {%- endif -%}
                {%- if block.settings.link_label != blank -%}
                  <a
                    class="link animate-arrow"
                    {% if block.settings.link == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.link }}"
                    {% endif %}
                  >
                    {{- block.settings.link_label | escape -}}
                    <span class="svg-wrapper">
                      <span class="icon-wrap">&nbsp;{{ 'icon-arrow.svg' | inline_asset_content }}</span>
                    </span>
                  </a>
                {%- endif -%}
              </div>
            </div>
          </li>
        {%- endfor -%}
      </ul>
    </div>

    {%- if section.settings.button_label != blank -%}
      <div class="center" style="margin-top: 20px;">
        <a
          class="button button--primary"
          {% if section.settings.button_link == blank %}
            role="link" aria-disabled="true"
          {% else %}
            href="{{ section.settings.button_link }}"
          {% endif %}
        >
          {{ section.settings.button_label | escape }}
        </a>
      </div>
    {%- endif -%}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // 桌面滑块功能
    const desktopSlider = document.querySelector('[data-desktop-slider]');
    if (desktopSlider) {
      const prevBtn = document.querySelector('.desktop-prev');
      const nextBtn = document.querySelector('.desktop-next');
      const itemWidth = document.querySelector('.multicolumn-list__item').offsetWidth + 20;

      prevBtn?.addEventListener('click', () => {
        desktopSlider.scrollBy({ left: -itemWidth * 3, behavior: 'smooth' });
      });

      nextBtn?.addEventListener('click', () => {
        desktopSlider.scrollBy({ left: itemWidth * 3, behavior: 'smooth' });
      });

      // 拖拽功能
      let isDown = false;
      let startX;
      let scrollLeft;

      desktopSlider.addEventListener('mousedown', (e) => {
        isDown = true;
        desktopSlider.style.cursor = 'grabbing';
        startX = e.pageX - desktopSlider.offsetLeft;
        scrollLeft = desktopSlider.scrollLeft;
      });

      desktopSlider.addEventListener('mouseleave', () => {
        isDown = false;
        desktopSlider.style.cursor = 'grab';
      });

      desktopSlider.addEventListener('mouseup', () => {
        isDown = false;
        desktopSlider.style.cursor = 'grab';
      });

      desktopSlider.addEventListener('mousemove', (e) => {
        if(!isDown) return;
        e.preventDefault();
        const x = e.pageX - desktopSlider.offsetLeft;
        const walk = (x - startX) * 2;
        desktopSlider.scrollLeft = scrollLeft - walk;
      });

      // 触摸支持
      desktopSlider.addEventListener('touchstart', (e) => {
        isDown = true;
        startX = e.touches[0].pageX - desktopSlider.offsetLeft;
        scrollLeft = desktopSlider.scrollLeft;
      }, { passive: true });

      desktopSlider.addEventListener('touchend', () => {
        isDown = false;
      });

      desktopSlider.addEventListener('touchmove', (e) => {
        if(!isDown) return;
        const x = e.touches[0].pageX - desktopSlider.offsetLeft;
        const walk = (x - startX) * 2;
        desktopSlider.scrollLeft = scrollLeft - walk;
      }, { passive: true });
    }
    
    // 移动端滚动优化
    const mobileSlider = document.querySelector('.multicolumn-list');
    if (mobileSlider && window.innerWidth <= 749) {
      let startX = 0;
      let startY = 0;
      let isScrolling = false;
      
      mobileSlider.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
        startY = e.touches[0].clientY;
        isScrolling = false;
      }, { passive: true });
      
      mobileSlider.addEventListener('touchmove', (e) => {
        if (!isScrolling) {
          const x = e.touches[0].clientX;
          const y = e.touches[0].clientY;
          const dx = Math.abs(x - startX);
          const dy = Math.abs(y - startY);
          
          isScrolling = dx > dy;
        }
      }, { passive: true });
      
      mobileSlider.addEventListener('touchend', () => {
        isScrolling = false;
      }, { passive: true });
    }
  });
</script>

{% schema %}
{
  "name": "Mixed multicolumn",
  "class": "section",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Multicolumn",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "Medium"
        },
        {
          "value": "h1",
          "label": "Large"
        },
        {
          "value": "h0",
          "label": "Extra Large"
        }
      ],
      "default": "h1",
      "label": "Heading size preset"
    },
    {
      "type": "header",
      "content": "Desktop text styling"
    },
    {
      "type": "color",
      "id": "title_color_desktop",
      "label": "Heading color (desktop)",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "title_size_desktop",
      "min": 12,
      "max": 72,
      "step": 1,
      "unit": "px",
      "label": "Heading size (desktop)",
      "default": 24
    },
    {
      "type": "range",
      "id": "title_margin_top_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Heading top margin (desktop)",
      "default": 0
    },
    {
      "type": "range",
      "id": "title_margin_bottom_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Heading bottom margin (desktop)",
      "default": 20
    },
    {
      "type": "color",
      "id": "block_title_color_desktop",
      "label": "Column title color (desktop)",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "block_title_size_desktop",
      "min": 12,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column title size (desktop)",
      "default": 18
    },
    {
      "type": "range",
      "id": "block_title_margin_top_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column title top margin (desktop)",
      "default": 0
    },
    {
      "type": "range",
      "id": "block_title_margin_bottom_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column title bottom margin (desktop)",
      "default": 10
    },
    {
      "type": "color",
      "id": "block_text_color_desktop",
      "label": "Column text color (desktop)",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "block_text_size_desktop",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Column text size (desktop)",
      "default": 14
    },
    {
      "type": "range",
      "id": "block_text_margin_top_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column text top margin (desktop)",
      "default": 0
    },
    {
      "type": "range",
      "id": "block_text_margin_bottom_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column text bottom margin (desktop)",
      "default": 10
    },
    {
      "type": "color",
      "id": "block_link_color_desktop",
      "label": "Column link color (desktop)",
      "default": "#0066CC"
    },
    {
      "type": "range",
      "id": "block_link_size_desktop",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Column link size (desktop)",
      "default": 14
    },
    {
      "type": "range",
      "id": "block_link_margin_top_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column link top margin (desktop)",
      "default": 0
    },
    {
      "type": "range",
      "id": "block_link_margin_bottom_desktop",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column link bottom margin (desktop)",
      "default": 0
    },
    {
      "type": "header",
      "content": "Mobile text styling"
    },
    {
      "type": "color",
      "id": "title_color_mobile",
      "label": "Heading color (mobile)",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "title_size_mobile",
      "min": 12,
      "max": 48,
      "step": 1,
      "unit": "px",
      "label": "Heading size (mobile)",
      "default": 20
    },
    {
      "type": "range",
      "id": "title_margin_top_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Heading top margin (mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "title_margin_bottom_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Heading bottom margin (mobile)",
      "default": 16
    },
    {
      "type": "color",
      "id": "block_title_color_mobile",
      "label": "Column title color (mobile)",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "block_title_size_mobile",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "Column title size (mobile)",
      "default": 16
    },
    {
      "type": "range",
      "id": "block_title_margin_top_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column title top margin (mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "block_title_margin_bottom_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column title bottom margin (mobile)",
      "default": 8
    },
    {
      "type": "color",
      "id": "block_text_color_mobile",
      "label": "Column text color (mobile)",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "block_text_size_mobile",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Column text size (mobile)",
      "default": 14
    },
    {
      "type": "range",
      "id": "block_text_margin_top_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column text top margin (mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "block_text_margin_bottom_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column text bottom margin (mobile)",
      "default": 8
    },
    {
      "type": "color",
      "id": "block_link_color_mobile",
      "label": "Column link color (mobile)",
      "default": "#0066CC"
    },
    {
      "type": "range",
      "id": "block_link_size_mobile",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Column link size (mobile)",
      "default": 14
    },
    {
      "type": "range",
      "id": "block_link_margin_top_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column link top margin (mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "block_link_margin_bottom_mobile",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Column link bottom margin (mobile)",
      "default": 0
    },
    {
      "type": "header",
      "content": "Image settings"
    },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "Third width"
        },
        {
          "value": "half",
          "label": "Half width"
        },
        {
          "value": "full",
          "label": "Full width"
        }
      ],
      "default": "full",
      "label": "Image width"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "Adapt to image"
        },
        {
          "value": "portrait",
          "label": "Portrait"
        },
        {
          "value": "square",
          "label": "Square"
        },
        {
          "value": "circle",
          "label": "Circle"
        }
      ],
      "default": "adapt",
      "label": "Image ratio"
    },
    {
      "type": "header",
      "content": "Button settings"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "Button label",
      "label": "Button label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Button border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "button_padding_top",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Button top padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_padding_right",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Button right padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "button_padding_bottom",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Button bottom padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_padding_left",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Button left padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "button_margin_top",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Button top margin",
      "default": 20
    },
    {
      "type": "range",
      "id": "button_margin_bottom",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Button bottom margin",
      "default": 0
    },
    {
      "type": "range",
      "id": "button_text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Button text size (desktop)",
      "default": 16
    },
    {
      "type": "range",
      "id": "mobile_button_text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Button text size (mobile)",
      "default": 14
    },
    {
      "type": "range",
      "id": "mobile_button_padding_top",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Mobile button top padding",
      "default": 10
    },
    {
      "type": "range",
      "id": "mobile_button_padding_right",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Mobile button right padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "mobile_button_padding_bottom",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Mobile button bottom padding",
      "default": 10
    },
    {
      "type": "range",
      "id": "mobile_button_padding_left",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Mobile button left padding",
      "default": 20
    },
    {
      "type": "header",
      "content": "Layout settings"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "Maximum visible columns (desktop)",
      "info": "Only 3 will be visible at once on desktop"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "left",
      "label": "Content alignment"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "primary",
          "label": "Primary"
        }
      ],
      "default": "primary",
      "label": "Background style"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Mobile settings"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 columns"
        }
      ],
      "default": "1",
      "label": "Columns on mobile"
    },
    {
      "type": "range",
      "id": "mobile_column_width",
      "min": 50,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Mobile column width",
      "default": 80,
      "info": "Width of each column on mobile devices"
    },
    {
      "type": "range",
      "id": "mobile_column_gap",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Mobile column gap",
      "default": 10,
      "info": "Space between columns on mobile"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": true,
      "label": "Enable swipe on mobile",
      "info": "Always enabled with this design"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding (desktop)",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding (desktop)",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding (mobile)",
      "default": 24
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding (mobile)",
      "default": 24
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Column",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "image_link",
          "label": "Image link to blog post",
          "info": "Link to a specific blog post"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "Column title",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Column content. Describe your product or feature here.</p>",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "Link label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Mixed multicolumn",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}